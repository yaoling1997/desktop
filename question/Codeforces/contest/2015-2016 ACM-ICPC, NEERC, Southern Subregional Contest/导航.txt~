b:
若a[i]>b[i]交换a[i],b[i]
再把所有蛋糕按a[i]从小到大排序
从后往前扫
再把b[i]~b[n]存到B中,从小到大排序(可以直接插入,不拍序)
从大到小枚举B[k]
当前答案就是z=a[i]*B[k]*(la-k+1)
用它更新答案
为什么一开始当a[i]>b[i]交换a[i],b[i]?
可以感性地理解一下
6 12               4 12  
4 5           和   6 5
当取两层时前者更大

d:
有点小细节
但是为啥又打错变量名了！
每两个人判断一下,看能不能meet
设人为I,J
若J出现之前I就没了,肯定不meet
I.t<J.t
若方向相同
相遇的话肯定是J出现后两个人就并排走...
所以只要判断J出现的那一刹那是否和I重合即可
若方向不同
设持续时间为m=min(I.t+I.m-J.t,J.m)......(别把J.m打成J.t)
每个人都可以走出一条线段
若这两条线段相交,则两人会meet
A人:             a________________________b
B人:                     c____________________d
设a<=b,c<=d,a<=c
要么是A从b到a,B从c到d
要么是A从a到b,B从d到c
两个人同时开始,同时消失
显然会在公共部分的某个点上相遇
若不相信就用反证法

f:
确定一个值,比答案小了可行,大了不可行,显然二分
二分后怎么判断可行呢?
贪心
枚举每一秒,看这一秒分配给哪个食物
贪心地想,应该分给剩余时间-需要时间最小的那个食物
极端地想,剩余时间-需要时间若等于0
不分给它显然不能尽可能地使当前答案合法
若剩余时间-需要时间若等于m (m>0)
则分给其它食物m次后,接下来必须先满足该食物,否则会不合法
假设m次都分给其它食物是合法的
从m次分x来满足该食物
且使该食物仍然是剩余时间-需要时间最小
这样做依然合法
所以得证...
所以贪心神马的,容易想到,难得证明...

g:
这道题目的意思看了半天都没懂
最后看了别人的代码，懂了(别人写的还是暴力,也能过...)
就是每天若要工作的话,之前得花d的时间准备
然后使总的工作时间>=r
二分答案+树状数组

h:
特殊的dfs技巧
先dfs出一棵树
然后其余的边都是后代连向祖先的边
这个算法是
对于每个点的子树
里面的点随便配对
若有剩下的点就留到那个点的父亲代表的子树中配对
这样做是正确的
因为这样的路径不会有边相交的情况
而且对于有k个标记点的联通块
答案要么是k/2            (k是偶数)
要么是(k-1)/2            (k是奇数)
这样的题目感觉做了好多了,但为啥就是没有想到呢
对于图的问题,可以考虑一下它的dfs树
