[HNOI2008]Cards
好久没做置换的题目了,早把burnside和polya忘记了,今天碰巧复习一下
burnside就是对于给出的一堆置换求方案数的一个定理
方案数=所有不同置换的不动点个数之和再除以不同置换的种类,也就是所有置换不动点个数的平均数
最经典的应用就是一个4*4的方格染一种颜色,把旋转90°,180°,270°后相同的方案算作一种,求不同等价类的个数
不考虑置换,一共有16种
考虑置换,0°置换不动点个数为16,90°和270°置换不动点个数均为2,180°置换不动点个数为4,所以等价类个数为(16+4+2+2)/4= 6
如果可以给方格染成更多颜色,考虑一个置换,它可以拆成x个循环,由于循环之间是相互独立,互不影响的,要成为不动点,那么循环内的点的颜色要相同,设有k种颜色,对于一种置换,不动点个数就是k^x,算的时候还是用burnside的算,不过这已经变成polya了
对于这道题,由于对颜色的个数还有限制,那么只要考虑合法的就行了
首先考虑"不动"的置换的方案数,相当于(sr+sb+sg)!/sr!/sb!/sg!
再考虑它给出的置换(记得要去掉1,2,3...n的这个置换,因为这个置换无论它给不给都有)
对于每个置换求方案数,先把循环长度弄出来,由于同一个循环只能给一个颜色,可以用DP解决
设f[i][j][k]表示当前sr满足了i个,sb满足了j个,sg满足了k个的方案数
一开始f[0][0][0]=1
然后像背包那样推就行了
f[i][j][k]+= f[i-A[z]][j][k]+f[i][j-A[z]][k]+f[i][j][k-A[z]]
然后当前置换的方案数就是f[sr][sb][sg]了
求个平均数就行了,由于p是质数

