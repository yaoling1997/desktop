[Noi2011]Noi嘉年华
又是一道诡异的DP
一开始还理解错题意了,原来一个嘉年华里的活动进行的时间是可以重叠的
然后就出现了诡异的状态设计,反正我是想不到
先设三个集合A,B,C分别代表A嘉年华,B嘉年华,和不选
对于每一个活动,要么属于A,要么属于B,要么属于C
由于时间长度对答案没有影响,所以先离散化,离散后的最大值为t
每个活动都有X,Y两个属性,表示X开始,Y结束
设num[i,j]表示X>=i&&y<=j的活动数
设pre[i,j]表示以i为结尾时刻,A集合选了j个活动,B集合可选活动的最大个数
suc[i,j]表示以i为起始时刻,A集合选了j个活动,B集合可选活动的最大个数
pre[i,j]= max(pre[i,j+1],pre[k,j]+num[k,i],pre[k,j-num[k,i]])0<=k<i
suc[i,j]= max(suc[i,j+1],suc[k,j]+num[i,k],suc[k,j-num[i,k]])i<k<=t+1
注意把不合法的状态赋值为-oo,这样就不用担心转移不合法了
然后设ans[i,j]表示i~j这一段必须取的活动数最小的嘉年华的最大活动数
ans[i,j]= max(min(x+y,num[i,j]+pre[i,x]+suc[j,y]))
直接枚举x,y是n^4的,所以只有30
然后是诡异的优化
x从小到大枚,y显然是不升的
枚举x,y可以跟着变化,所以是n^3的
由于是min(x+y,num[i,j]+pre[i,x]+suc[j,y])
当x+y>num[i,j]+pre[i,x]+suc[j,y]时,y减小,右边要么增大,要么不变,所以枚到恰好<=就行了
