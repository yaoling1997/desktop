[Noi2013]向量内积
总算过了,卡了一上午,总算能过BZOJ了
首先要分k=2和k=3讨论
k=2:
不妨用矩阵来表示(模2意义下)
把n条向量并成一个矩阵,不妨设为T
它的转置矩阵,不妨设为T'(行和列互换,第i行相当于转置矩阵的第i列)
它们两个相乘,设新的为A,对应位置(i,j)就是向量i与向量j的内积了
如果矩阵中有一个位置是0,相当于找到了一个i,j它们相乘mod k=0
但是直接算出矩阵显然会T,所以不能直接算出矩阵
考虑到一个无解的矩阵,设为B
B除了主对角线外其余元素都为1
然后就转化成了判断矩阵A是否=矩阵B
随机一个向量F,f,F*T*T'变成F',f*B变成f'
这样只要判断两个向量是否相等就行了
左边计算显然只要n*d,右边计算考虑矩阵B的特殊性质(除对角线外,其余元素一定是1),也可以n*d算出来,对角线预处理就行了,也只要n*d
反正直接取的向量全都为1就可以过了
找到两个向量中的一个元素不同的位置,相当于矩阵A在这一列中有一个0,于是计算这一列,看看哪个是0即可
k=3:
做法差不多,不过,因为是mod　3,所以矩阵中有的元素可能是1,有的可能是2
但是1*1 mod 3= 1 2*2 mod 3= 1
A矩阵元素平方再模右变成0,1矩阵了
因为Ai,j= ∑Ti,k*T'k,j
(Ai,j)^2= (∑Ti,k*T'k,j)^2
算的时候只需要把矩阵T扩展一下,变成n*d*d的矩阵X
Xi,j= ∑Ti,k1*Ti,k2(k1,k2∈d)
但是这玩意存不下,于是直接算就行了
找的话也是一样的,直接找就行了
由于BZOJ特别卡常数,总时限还只给10s,倘若存的时候是X[100010][110]就会TLE
但是有一个很神奇的常数优化,就是多维数组把小的放前面
变成X[110][100010]
然后速度快了1倍
再优化一下就卡着时限过去了
