#include<cstdio>
#include<cstdlib>
#include<algorithm>
#include<cstring>
#include<vector>
#include<queue>
#include<cmath>
#define ll long long
using namespace std;
const int maxn= 3e5,maxm= 1e6+10,M= 1e6,mo= 1e9+7;
struct query{
	int l,r,h;
}Q[maxn];
int A[maxm][10],L[maxm],vis[maxm],inv[maxm];
int a[maxn],ans[maxn],sta[maxm];
int i,j,k,x,y,z,q,l,r,n,m,la;
bool cmpl(query a,query b){
	return a.l<b.l||(a.l==b.l&&a.r<b.r);
}
bool cmpr(query a,query b){
	return a.r<b.r||(a.r==b.r&&a.l<b.l);
}
void gcd(int a,int b,int &x,int &y){
	if (!b){
		x= 1;
		y= 0;
		return;
	}
	int t= x;
	x= y;
	y= t-a/b*y;
}
int main()
{
	freopen("1.in","r",stdin);
	freopen("1.out","w",stdout);
	for (i= 2;i<=M;i++){
		gcd(i,mo,inv[i],y);
		inv[i]= (inv[i]+mo)%mo;
		if (vis[i]) continue;
		sta[++la]= i;
		j= i;
		while (j<=M){
			vis[j]= 1;
			L[j]++;
			A[j][L[j]]= i;
			j+= i;
		}
	}
	scanf("%d",&n);
	for (i= 1;i<=n;i++)
		scanf("%d",&a[i]);
	scanf("%d",q);
	base= sqrt(q)+0.1;
	for (i= 1;i<=q;i++){
		scanf("%d%d",&x, &y);
		Q[i]= (query){x,y,i};
	}	
	sort(Q+1,Q+q+1,cmpl);
	memset(vis,0,sizeof(vis));
	for (i= 1;i<=q;i+= base){
		for (j= 1;j<=la;j++) vis[sta[j]]= 0;
		now= 1;
		m= min(i+base-1,q);
		sort(Q+i,Q+m+1,cmpr);
		l= Q[i].l,r= Q[i].r;
		for (j= l;j<=r;j++){
			x= a[j];
			for (k= 1;k<=L[x];k++){
				y= A[x][k];
				now= now*inv[y]%mo*(y-1)%mo;
			}
		}
		for (j= i+1;j<=m;j++){
			
		}
	}return 0;
}
