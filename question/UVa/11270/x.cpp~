#include<cstdio>
#include<cstdlib>
#include<algorithm>
#include<cstring>
#define ll long long
using namespace std;
const int maxn= 3001;
ll b[200][200],d[2][2000];
int n,m,cur;
void update(int a,int b){
	if (b & (1<<m)) d[cur][b^(1<<m)]+= d[cur^1][a];
}
int solve(int n,int m){
	int i,j,k;cur= 0;
	memset(d,0,sizeof(d));
	d[0][1<<(m-1)]= 1;
	for (i= 1;i<=n;i++)
		for (j= 1;j<=m;j++){
			cur^= 1;
			for (k= 0;k<(1<<m);k++){
				update(k,k<<1);
				if (i>1&&(k^(1<<(m-1)))) update(k,(k<<1)^(1<<m)^1);
				if (j>1&&(k^1)) update(k,(k<<1)^3);
			}
		}return d[cur][(1<<m)-1];
}
int main()
{
	freopen("1.in","r",stdin);
	freopen("1.out","w",stdout);
	memset(b,-1,sizeof(b));
	while (scanf("%d %d",&n, &m)!=EOF){
		if (n<m) swap(n,m);
		if (b[n][m]<0) b[n][m]= solve(n,m);
		printf("%lld\n",b[n][m]);
	}return 0;
}
