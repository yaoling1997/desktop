x:
普通快速幂
输入 a,b,c求a^b%c
时间复杂度是O(log(n))的
把b看作2进制，如果对应2进制的位子为1则乘上去
比如说 b=5(十进制)=101(二进制)
a^5=a^(2^2)*a^(2^0)
然后从最低位开始，因为a^(2^(k+1))=a^(2^k)*a^(2^k)所以每一轮a只要乘上自己再模就行了，如果b的二进制的对应位为1则乘到t里去。每一轮截掉b的末尾
x1:
十进制快速幂
输入 a,b,c求a^b%c(a<=maxlong long,c<=10^18,len(b)<=10^5)
时间复杂度O(len*log(n)^2)
对于一个很长的b来说，要以十进制的一位一位地算
a^123=a^3*a^20*a^100
每次进行普通的快速幂乘到答案里就行了
这里还用到了一个快速乘法(我是这么叫的)，防止乘的时候爆long long原理跟快速幂一样，只是每次是加罢了
