#include<cstdio>
#include<cstdlib>
#include<cmath>
#include<algorithm>
using namespace std;
const double rad= 0.33333333;
const int maxn=3001,oo= 999999999;
struct point {
	double x,y;
};
typedef point vec;
point p[maxn];
int n,a1,a2;
double ans= oo;
vec operator +(vec a,vec b){a.x+= b.x;a.y+= b.y;return a;}
vec operator -(vec a,vec b){a.x-= b.x;a.y-= b.y;return a;}
vec operator *(double t,vec a){a.x*= t;a.y*= t;return a;}
vec operator /(double t,vec a){a.x/= t;a.y/= t;return a;}
bool operator <(vec a,vec b){return (a.x<b.x) || (a.x==b.x && a.y<b.y);}
double cj(vec a,vec b){return a.x*b.y-a.y*b.x;}
double dj(vec a,vec b){return a.x*b.x+a.y*b.y;}
double length(vec a){return sqrt(dj(a,a));}
vec rot(vec a,double r){
	vec c;
	c.x= a.x*cos(r)-a.y*sin(r);
	c.y= a.x*sin(r)+a.y*cos(r);
	return c;
}
bool cmp(point a,point b){return a<b;}
int main()
{
	freopen("1.in","r",stdin);
	freopen("1.out","w",stdout);
	scanf("%d\n",&n);
	for (int i= 1;i<=n;i++) {
		scanf("%lf %lf",&p[i].x,&p[i].y);
		p[i]= rot(p[i],rad);
	}
	sort(p+1,p+n+1,cmp);
	for (int i= 1;i<n;i++)
		for (int j= i+1;j<=n;j++){
			double len= length(p[j]-p[i]);
			if (ans>len){
				ans= len;
				a1= i;
				a2= j;			
			}else if (p[j].x-p[i].x>ans) break;
		}
	printf("%.2lf %.2lf %.2lf %.2lf\n",p[a1].x, p[a1].y, p[a2].x , p[a2].y);
	printf("%.2lf\n",ans);
	return 0;
}
