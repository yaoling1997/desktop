x:
BZOJ1036
树链剖分加线段树维护，找LCA。
树链剖分后把一条链上的点弄一个新的标号x[i]= tot，同时用y[tot]=i建立互相映射。c是记录一开始的点权。root[i]维护i(原)所在的线段树根节点。f[][]倍增用的,zz记录当前点该往哪边走。size[]子树有多少节点。vector<int>g[maxn]用来存图的,par[]记录一条链上最靠近根节点的点,fa[]每个点(原)的爸爸。
大体思路是找到lca后开始在线段树之间跳来跳去(当然是不断逼近lca)直到到达lca，一路上维护信息就行了,要是lca的深度小于当前线段树最左端点的深度的话，那么左端就是x[左端点]，
右是x[当前点]+1(左开右闭)。更新后当前点变为线段树最左端点的父亲，在另一颗线段树内接着跳。如果深度大于，就只要跳到lca就行了，左端是x[lca]，右端仍然是
x[当前点]+1，跳到lca就可以结束了。
本来有很多线段树的，但是开在一个数组里
x1:
BZOJ1036
LCT

模板题：BZOJ1036

