x:
Manacher算法，O(n)时间内解决回文子串(奇串)
如果偶串也算回文串的话就在字符间加'#'号，当然两端也要加，加完后再在左边加一个特殊字符防止溢出,加完后有一个神奇的性质就是rad[i]-1=回文串长度,若不加，长度为2*rad[i]-1
这个算法的关键是在线性时间内求出每个字符为中心的半径
rad[]记录每个字符为中心的半径(半径长度包括自己)
因为求rad[i]时，它前面的rad[j](j<i)都已经求出来了，我们考虑如何用rad[j]求出rad[i]
mx表示i左边的字符回文串往右扩展到哪，id表示那个字符的位子
因为回文串是对称的，所以位子关于id对称的两个字符的半径信息有重叠部分。
设与i关于id对称的字符位子为j，若rad[j]<mx-i+1,则可以确定rad[i]=rad[j]，
若rad[j]>=mx-i+1,半径只能取mx-i+1,可能可以继续扩展,所以就接着扩展

BZOJ: 2565 2342
POJ: 3974
