x:
dinic是个比较快的最大流算法，尤其是加上了刘汝佳的诡异“弧优化”应该变得更快了。弧优化可以避免重复走相同的边。弧优化（cur）是利用了C++STL里面的一个玩意儿‘Vector’，自从用了它，再也不用担心数组会开爆了。它应该是个动态数组，所以用它空间上不会吃亏，还能弄出许多意想不到的优化(用数组模拟的邻接表也能用弧优化)。
连边的时候用了一下异或'^'，表示反向边。
4     =100 
 (10）    （2）
所以 4^1=100     ^1=101    =5
            （2）      （2）
同理 5 ^ 1=4
dinic主要分为两大块：BFS和DFS
BFS是用来构建层次图的，dfs用来找增广路。
层次图按BFS的顺序确定距离，弄好后就DFS。
注意dfs时不要忘记 return了
引用真是个神奇的玩意。
dinic结束的条件是bfs时找不到增广路了。
最多构建n-1次层次图
比如说当前层次是0~3
dfs后所有长度为3的路径都会被“割断”(这路径上至少一条边满流)
所以下次只会dfs长度大于3的路径
dfs增光最坏情况n*m,所以最坏时间复杂度为O(m*n^2)
不过一般要好很多
BZOJ: 1412


