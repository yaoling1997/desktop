ISAP
每次增广后，残量网络中的任意结点到汇点的最短距离都不会减小
用d[i]表示残量网络中结点i到汇点的距离下界
然后在增广过程中不断修正这个下界
(不像dinic那样多次增广后才重建层次图)
增广的时候只允许沿着d[i]=d[j]+1的弧(i,j)走

d是非负函数,d[t]=0
对于任意弧(i,j) d[i]<=d[j]+1
满足上述两个条件,d[i]就是i~t的距离下界
当d[s]>=n时，残量网络中不存在s-t的路
找增广的过程就是从s开始沿着"允许弧"(残量网络中d[i]=d[j]+1的弧i->j)往前走
(ISAP中叫advance)
走不动了(找不到增广路)就往回走
由于没有一次性修改所有距离标号的过程,只能边增广边修改
从i结点往回走的时候把d[i]修改为min(d[j]|(i,j)是残量网络中的弧)+1
(ISAP中叫retreat)
残量网络中从i出发没有弧,则d[i]=n
ISAP中首先要使用当前弧加速允许弧的查找
还要一个num数组维护每个距离标号下的结点编号
当把一个结点的距离从x改成y时
把num[x]减1,num[y]加1
然后检查num[x]是否为0
如果是0,说明s-t不连通,算法终止(gap优化)
bfs过程变成了逆向
增广过程分两步,先从汇点开始逆推,计算可改进量a,然后再逆推一次,进行增广
