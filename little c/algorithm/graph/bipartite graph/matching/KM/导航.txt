x:
最大权匹配:
有一个完全二分图G,每条边有一个权值(可以是负数)，求出权值和最大的完美匹配
KM算法:
1:可行顶标，这是一个节点函数，使得对于任意弧(x,y)有l(x)+l(y)>=w(x,y)
2:相等子图,是G的生成子图，包含所有点，但只包含l(x)+l(y)=w(x,y)的所有边
一个极为重要的定理，即如果相等子图有完美匹配，则该匹配是原图的最大匹配
证明:设M*是相等子图的完美匹配，根据定义有M*的权和等于所有顶标之和(每个匹配点只连一条匹配边)，另一方面，任取G的一个完美匹配M，由于M中的边只满足不等式
w(x,y)<=l(x)+l(y),M的权和不超过所有顶标之和，也就是不超过M*的权和
问题的关键就是寻找好的可行顶标，使相等子图有完美匹配
首先任意构造一组顶标(Y[i]都为0,X[i]为它连出去的边的最大权值),然后求相等子图的完美匹配，如果存在完美匹配，算法终止，否则修改顶标使得相等子图的边变多，有更大的机会存在完美匹配
从匈牙利树入手修改顶标。设匈牙利树中的X结点集为S,Y结点集为T，则S到T'没有边(否则匈牙利树会继续生长，换句话说就是可以继续匹配)S'到T的边都是非匹配边(是匹配边的话就一定在匈牙利树中,因为会走到那里去),如果把S中所有的点的顶标同时减少一个相同的整数a，则S到T'中可能会有新的边进入相等子图(为了继续匹配)。为了保证S-T的匹配边不离开相等子图，还要把T中所有点的顶标同时增加a(保证性质lx(x)+ly(y)==w[x,y])。
不难发现，应取a=min(l(x)+l(y)-w[x,y])x∈S,y∈T'
因为如果S中的每个顶标的实际减小值小于a,则不会有新边加入,如果比这个值大则顶标将变得不可行(有边直接被忽略掉了)
对于边(x,y)进入相等子图，有两种情况:
1:y是未覆盖点，则找到增广路
2:y和S中的点z匹配，则把z和y分别加入到S和T中
每次修改顶标要么找到增广路，要么使匈牙利树增加两个节点，因此需要O(n^2)次修改顶标的操作，这样,问题关键在于如何快速修改顶标
最朴素的做法，是枚举S和T中的每一个元素,根据定义计算最小值,
每次修改的时间为O(n^2),总时间为O(n^4)

BZOJ: 3571
UVa:11383
LA:4043
