匹配是指两两没有公共点的边集
最小点覆盖:选最少的点覆盖所有的边
最大独立集:选最多的点使它们之间没有边相连
显然 最大独立集=点数-最小点覆盖
二分图最小点覆盖=最大匹配=最小割=点数-最大独立集
证明二分图最小点覆盖=最大匹配(König定理,什么玩意)
http://www.matrix67.com/blog/archives/116
求完最大匹配后
从X部的未盖点开始扩展匈牙利树,把一路上的点都标记
则左边的未标记点和右边的已标记点组成最小点覆盖集,大小为最大匹配数M
证明:(搞了半天才弄懂...)
先证明点集大小为M
点集中的每个点都是最大匹配的一个端点
点集中属于X的点都是匹配点(显然)
点集中属于Y的点都是匹配点(也显然)
然后这些点和匹配边一一对应(一条匹配边,两端要么同时被标记,要么同时未标记)
然后为何这个点集能覆盖所有边?
每条边的端点的情况:
左边未标记,右边未标记
左边未标记,右边已标记
左边已标记,右边未标记
左边已标记,右边已标记
若取点集中的点,可以覆盖1,2,4这三种情况的边
然后3这种情况是不可能的
分情况讨论:
1.这条边是匹配边,那么左边的标记是由右边传来的,矛盾
2.这条边是非匹配边,那么右边可以通过这条边得到左边的标记
综上,矛盾
然后为何是最小的点覆盖?
因为覆盖M条匹配边至少要M个点

证明最小点覆盖=点数-最大独立集
即要证最大独立集=点数-最小点覆盖
因为去掉最小点覆盖后剩下的点之间都没有连边(否则不叫最小点覆盖了)
所以证完了

最小边覆盖=总点数-最大匹配数(注意要判断是否有无边的点)
证明:一条边最多覆盖两个点,所以先用最大匹配的边去覆盖尽量多的点
不在最大匹配中的点就只能用一条边覆盖一个了
设最大匹配为m,总点数为n,未匹配点为a
则2m+a=n,最小边覆盖=m+a=m+n-2m=n-m

x:
二分图最大匹配:给一个二分图，找一个边数最大的匹配，即选尽量多的边，使得任意两条选中的边均没有公共点
完美匹配(perfect matching):所有点都是匹配点
匈牙利算法就是不断找增广路，直到找不到为止

这个算法基于增广路定理
未盖点:不与任何匹配边邻接的点
其他的为匹配点,即恰好一条匹配边邻接的点
从未盖点出发依次经过非匹配边,匹配边,非匹配边...
所得到的路径为交替路
如果交替路的终点是一个未盖点,则称这条交替路为一条增广路
增广路中,非匹配边比匹配边多一条
把非匹配边和匹配边互换,得到的匹配增加
所以若找不到增广路,得到的匹配为最大匹配
一个匹配是最大匹配的充分必要条件是不存在增广路,这个充要条件适合于任意图
复杂度O(mn)
不过一般要好得多

还有不要二二地以为可以用当前弧优化,虽然好像大多数情况下都不会萎,但是有反例
可以预先求出一个匹配,再增广,这样会快一些
x集合中的点与y集合中的点的标号可以有重复
开个数组,记录每次增广时y中哪些点被访问过,而x的不用
只需要x向y连边就行了,不需要连双向边
BZOJ: 1191 1562 3140 1059
UVA: 12530
LA: 3415
